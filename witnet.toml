[connections]
# Server address tells what local interface and port the Witnet node server should bind to.
# This will probably look like `0.0.0.0:21337` or `192.168.x.x:21337`, but it totally depends on your local network.
server_addr = "0.0.0.0:21337"
# Public address needs to match your *public* IP and port, assuming your router is configured to forward incoming
# connections to the local IP of the device the node is running. Failure to configure this setting will result in your
# node not receiving inbound connections (see: https://docs.witnet.io/try/run-a-node/#open-your-ports).
public_addr = "0.0.0.0:21337"
# List of bootstrap peer addresses. The first time that a node runs, it connects to some of these addresses and query
# them for a list of all the addresses they know. From that moment on, the addresses listed here are not given any
# preference over addresses that have been discovered in any way.
known_peers = [
    "52.166.178.145:21337",
    "52.166.178.145:22337",
    "173.249.8.65:20337",
    "173.249.8.65:21337",
    "173.249.3.178:21337",
    "173.249.3.178:22337",
    "51.91.11.234:21338",
    "51.91.11.234:21339",
    "51.91.11.234:21340",
    "23.95.164.163:21337",
    "31.25.98.38:21337",
    "45.43.30.195:5",
    "45.43.30.198:17",
    "45.43.30.200:28",
    "45.43.30.203:41",
    "45.154.212.2:3",
    "45.154.212.7:36",
    "45.154.212.9:45",
    "45.154.212.9:50",
    "45.154.212.11:68",
    "45.154.212.51:1",
    "45.154.212.54:20",
    "45.154.212.56:26",
    "45.154.212.58:40",
    "45.154.212.61:51",
    "45.154.212.62:59",
    "46.4.102.43:22350",
    "46.4.115.118:22368",
    "49.12.133.160:22380",
    "52.166.178.145:21337",
    "65.21.148.88:23337",
    "65.21.150.191:22337",
    "65.21.154.49:22337",
    "65.21.157.140:21337",
    "65.21.157.211:23337",
    "65.21.158.201:21337",
    "65.21.185.3:21332",
    "65.21.185.3:21337",
    "65.21.185.175:21334",
    "65.21.185.175:21336",
    "65.21.185.175:22337",
    "65.21.185.235:21330",
    "65.21.185.235:21331",
    "65.21.185.235:21334",
    "65.21.185.237:22337",
    "65.21.187.246:21337",
    "65.21.187.247:21335",
    "65.21.187.248:21332",
    "65.21.187.247:22337",
    "65.21.187.248:21334",
    "65.21.187.249:21337",
    "65.21.187.249:22337",
    "82.213.200.249:21337",
    "88.99.68.109:22382",
    "78.46.83.214:22371",
    "78.46.86.104:22375",
    "78.46.123.25:22339",
    "88.99.208.52:22339",
    "88.198.8.177:22380",
    "93.100.156.159:21337",
    "95.216.214.204:21337",
    "95.216.214.238:21337",
    "95.217.144.154:22355",
    "104.218.233.115:2",
    "104.218.233.115:5",
    "104.218.233.116:6",
    "104.218.233.117:12",
    "104.218.233.118:18",
    "104.218.233.118:20",
    "104.218.233.119:24",
    "104.218.233.119:2237",
    "104.218.233.120:28",
    "104.218.233.120:30",
    "104.218.233.121:34",
    "104.218.233.121:35",
    "104.218.233.122:36",
    "116.202.131.26:22339",
    "116.202.162.85:22349",
    "116.202.218.95:22344",
    "116.202.218.95:22359",
    "135.181.6.61:22344",
    "135.181.6.61:22352",
    "135.181.19.225:22340",
    "135.181.19.227:22381",
    "135.181.60.153:22350",
    "135.181.152.251:23337",
    "136.243.74.201:22346",
    "136.243.93.163:22349",
    "136.243.93.244:22373",
    "136.243.94.119:22379",
    "136.243.144.199:21337",
    "138.201.65.62:22355",
    "138.201.66.37:22342",
    "138.201.83.20:22362",
    "138.201.83.56:22350",
    "144.76.222.234:21337",
    "148.251.152.217:22370",
    "159.69.68.67:22351",
    "159.69.74.89:22339",
    "159.69.146.71:21337",
    "168.119.5.23:22362",
    "168.119.5.24:22344",
    "168.119.5.25:22357",
    "178.63.67.40:22350",
    "188.40.90.184:22339",
    "188.40.123.177:22354",
    "195.201.157.91:22339",
    "213.239.194.162:22369",
]

# How many peer connections to stablish before considering that is safe to decide what the best chain tip is, based on
# the beacons that those peers are announcing.
outbound_limit = 8
# Period for opening new peer connections while the current number of peers is lower than `outbound_limit`.
bootstrap_peers_period_seconds = 1
# Reject (tarpit) inbound connections coming from addresses that are alike (i.e. by default having the first 18 bits equal),
# so as to prevent sybil peers from monopolizing our inbound capacity.
reject_sybil_inbounds = true

[storage]
# Path of the folder where RocksDB storage files will be written to.
db_path = ".witnet/storage"

[jsonrpc]
# Enables or disables the JSON-RPC server. This is needed for using the CLI methods of the node.
enabled = true
# The address (IP and port) which the JSON-RPC server binds to.
# WARNING: this should be kept to a local, private address (e.g. 127.0.0.1) to prevent any device in your local network
# (and potentially, the internet) from messing with your JSON-RPC server.
server_address = "127.0.0.1:21338"

[ntp]
# Period for checking the local system clock drift against a public NTP server.
update_period_seconds = 1024

[mining]
# Enable or disable mining and participation in resolving data requests.
enabled = true
# Limit the number of retrievals that the node will perform during a single epoch. Due to the locking, highly
# side-effected nature of performing HTTP GET requests, a limit needs to be enforced on the number of retrievals that
# we are willing to perform by unit of time.
# Raising this limit too high may make the node unresponsive to time-critical events, which could potentially lead to
# desynchronization, forking or slashing.
# This is assumed to be a safe default and it should never cause any node to refrain from participating in data requests
# for which it was eligible.
data_request_max_retrievals_per_epoch = 30
# Limit the number of milliseconds that the node is willing to wait for a data source in from data request to response.
data_request_timeout_milliseconds = 2000
# Path for the `genesis_block.json` file that contains the initial wit allocations that need to be built into the first
# block in the block chain.
genesis_path = ".witnet/config/genesis_block.json"
# `mint_external_address` and `mint_external_percentage` enable splitting the mint reward between the node's
# own address and an "external" address, e.g. a the address of a wallet. `mint_external_percentage` indicates
# the percentage of the block rewards that will be assigned to `mint_external_address` (50% by default)
#mint_external_address = "twit1jqgf4rxjrgas3kdhj3t4cr3mg3n33m8zw0aglr"
#mint_external_percentage = 50
# Set a minimum fee you require before your node includes a value transfer transaction into a block
minimum_vtt_fee_nanowits = 1

[log]
# Logging level, i.e. from more verbose to quieter: "trace" > "debug" > "info" > "warn" > "error" > "none"
level = "info"

[wallet]
# The address (IP and port) of a Witnet node's JSON-RPC server. This should normally match `json_rpc.server_address`.
# If more than one address is provided, the wallet will choose one at random.
node_url = "127.0.0.1:21338"
